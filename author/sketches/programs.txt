

00 ENTER
========================================================================
01 PUSH   ◢◤                   | +1 | 1 | [0] = $10
------------------------------------------------------------------------
02 DUP    ◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤ | +1 | 2 | [0] = (-1)
03 PUSH   ◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤ | +1 | 3 | [0] = $1
04 SUB    ◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤ | -1 | 2 | [0] = (-2) - (-1)
05 DUP    ◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤ | +1 | 3 | [0] = (-1)
06 PUSH   ◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤ | +1 | 4 | [0] = $1
07 EQ     ◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤ | -1 | 3 | [0] = (-2) == (-1)
------------------------------------------------------------------------
08 JWZ    ◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◣ | -1 | 2 | [0] = (-1) ? #09 : #02
========================================================================
LOOP[i]   0 1 2 3 4 5 6 7 8 9  | +1 | 4 * 9 == 45 max stack
------------------------------------------------------------------------
loop( @TOS - 1 )
========================================================================
09 LEAVE


--------------------------------------------------------------------------------
  SCR = Stack Change Rate
----------+-------+-----+-------------------------------------------------------
program   | state | SCR | stack commands
----------+-------+-----+-------------------------------------------------------
00 ENTER    [ S ] [  0  ]
01 PUSH 10  [ S ] [ +1  ] [10]
02 PUSH 20  [ S ] [ +1  ] [20]
03 ADD      [ S ] [ -1  ] [+(-2, -1)]
04 LEAVE    [ S ] [  0  ]
05 HALT     [ H ] [  0  ]
--------------------------------------------------------------------------------


              0 1 2 3 4 x                       0 1 2
00 ENTER    [ 0 1 0 0 0 0 ] STACK:01 [  0 ] = [ 0 0 0 ]
01 PUSH 10  [ 0 0 1 0 0 0 ] STACK:01 [ +1 ] = [ 0 1 0 ]
02 PUSH 20  [ 0 0 0 1 0 0 ] STACK:02 [ +1 ] = [ 0 0 1 ]
03 ADD      [ 0 0 0 0 1 0 ] STACK:03 [ -1 ] = [ 0 1 0 ]
04 LEAVE    [ 0 0 0 0 0 1 ] STACK:01 [  0 ] = [ 0 1 0 ]


            [ 0 +1 +1 -1  0  0 ]

00 ENTER    [ 0  1  0  0  0  0 ]
01 PUSH 10  [ 0  0  1  0  0  0 ]
02 PUSH 20  [ 0  0  0  1  0  0 ]
03 ADD      [ 0  0  0  0  1  0 ]
04 LEAVE    [ 0  0  0  0  0  1 ]



                             +---------+
               instr ptr*    |  stack  |
             [ 0 1 2 3 4 x ] | changes |  scatter/gather commands
00: ============================================================================
    STATE:00 [ 0 0 0 0 0 0 ] | []      |
  * -------------------------+---------+----------------------------------------
    ENTER:00 [ 0 1 0 0 0 0 ] |  -0  0  |
01: ============================================================================
    STATE:01 [ 0 1 0 0 0 0 ] | []      |
  * -------------------------+---------+----------------------------------------
     PUSH:01 [ 0 0 1 0 0 0 ] |  -0 +1  | CONST(10)
02: ============================================================================
    STATE:02 [ 0 0 1 0 0 0 ] | [10]    |
  * -------------------------+---------+----------------------------------------
     PUSH:02 [ 0 0 0 1 0 0 ] |  -0 +1  | CONST(20)
03: ============================================================================
    STATE:03 [ 0 0 0 1 0 0 ] | [10,20] |
  * -------------------------+---------+----------------------------------------
      ADD:03 [ 0 0 0 0 1 0 ] |  -2 +1  | ADD(-2, -1)
04: ============================================================================
    STATE:04 [ 0 0 0 0 1 0 ] | [30]    |
  * -------------------------+---------+----------------------------------------
    LEAVE:04 [ 0 0 0 0 0 1 ] |  -0  0  |
05: ============================================================================
    STATE:05 [ 0 0 0 0 0 1 ] | [30]    |
    -------------------------+---------+----------------------------------------


             - run time ->
         +-------------------+
SCAN:**  |  [ 0 1 2 3 4 x ]  |  <transitions> | stack       | notes
---------+-------------------+----------------+-------------+---------------------------------
00 ENTER |  [ 0 1 0 0 0 0 ]  |  S:00 -> S:01  |             | Only ENTER can only
0* ENTER |  [ 0 0 0 0 0 1 ]  |  S:0* -> NULL  |             | be at 0 (always)
---------+-------------------+----------------+-------------+---------------------------------
01 PUSH  |  [ 0 0 1 0 0 0 ]  |  S:01 -> S:02  | 10          |
02 PUSH  |  [ 0 0 0 1 0 0 ]  |  S:02 -> S:03  | 20          |
0* PUSH  |  [ 0 0 0 0 0 1 ]  |  S:0* -> NULL  |             | invalid cases
---------+-------------------+----------------+-------------+---------------------------------
>3 ADD   |  [ 0 0 0 0 0 1 ]  |  S:03 -> FAIL  |             | less than 2 is stack underflow
03 ADD   |  [ 0 0 0 0 1 0 ]  |  S:03 -> S:04  | (01) + (02) |
0* ADD   |  [ 0 0 0 0 0 1 ]  |  S:03 -> NULL  |             | invalid cases
---------+-------------------+----------------+-------------+---------------------------------
0* LEAVE |  [ 0 0 0 0 0 1 ]  |  S:04 -> HALT  |             |
---------+-------------------+----------------+-------------+---------------------------------
HALT:** ... the end state, it has no transitions out
FAIL:** ... the error state, it has no transitions out
NULL    ... not really a state, just a way to say we can discard these states


              0 1 2 3 4 x
00 ENTER    [ 0 1 0 0 0 0 ] 00 -> 01
01 PUSH 10  [ 0 0 1 0 0 0 ] 01 -> 02
02 PUSH 20  [ 0 0 0 1 0 0 ] 02 -> 03
03 ADD      [ 0 0 0 0 1 0 ] 03 -> 04
04 LEAVE    [ 0 0 0 0 0 1 ] 04 -> 05
05 HALT


         [ 0 1 2 3 4 x ]
STATE:00 [ 0 0 0 0 0 0 ]
ENTER:00 [ 0 1 0 0 0 0 ] -- only valid choice
========================
STATE:01 [ 0 1 0 0 0 0 ]
 PUSH:01 [ 0 0 1 0 0 0 ] -- only logical choice
------------------------
ENTER:01 [ 0 0 0 0 0 1 ] -- error state
  ADD:01 [ 0 0 0 0 0 1 ] -- error state
LEAVE:01 [ 0 0 0 0 0 1 ] -- halting state
========================
STATE:02 [ 0 0 1 0 0 0 ]
 PUSH:02 [ 0 0 0 1 0 0 ] -- only valid choice
------------------------
ENTER:02 [ 0 0 0 0 0 1 ] -- error state
  ADD:02 [ 0 0 0 0 0 1 ] -- error state
LEAVE:02 [ 0 0 0 0 0 1 ] -- halting state
========================
STATE:03 [ 0 0 0 1 0 0 ]
  ADD:03 [ 0 0 0 0 1 0 ] -- only valid choice
------------------------
ENTER:03 [ 0 0 0 0 0 1 ] -- error state
 PUSH:03 [ 0 0 0 0 0 1 ] -- error state
LEAVE:03 [ 0 0 0 0 0 1 ] -- halting state
========================
STATE:04 [ 0 0 0 0 1 0 ]
LEAVE:04 [ 0 0 0 0 0 1 ] -- only valid choice
------------------------
ENTER:04 [ 0 0 0 0 0 1 ] -- error states
 PUSH:04 [ 0 0 0 0 0 1 ] -- error states
  ADD:04 [ 0 0 0 0 0 1 ] -- error states
========================








